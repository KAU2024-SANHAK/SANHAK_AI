Index: database.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\nimport pymysql.cursors\nimport datetime\nfrom flask import Flask, request, jsonify\nfrom diaryclass import diary\nfrom collections import defaultdict\n\n\napp = Flask(__name__)\n\nmysql_params = {\n    'host': 'kkoolbee-database.cvimcwwiengv.ap-northeast-2.rds.amazonaws.com',\n    'port': 3306,\n    'user': 'admin',\n    'password': 'sanhakkau11223344!!',\n    'database': 'kkooldanji',\n    'charset': 'utf8',\n    'cursorclass': pymysql.cursors.DictCursor\n}\n\n\n@app.route('/diary', methods=['GET'])\ndef get_api_diary_create():\n    conn = pymysql.connect(**mysql_params)\n    data = request.json\n    token = request.headers.get('Authorization')\n\n    new_diary = diary(\n        diary_content = diary.diary_content(\n            feeling = data['feeling'],\n            when = data['when'],\n            where = data['where'],\n            who = data['who'],\n            what = data['what'],\n            realized = data['realized']\n        ),\n        metadata=None,\n        content=None,\n        title=None,\n        spicy_advice=None,\n        soft_advice=None\n    )\n\n    new_diary.get_diary_completion()\n    try:\n        with conn.cursor() as cursor:\n            query = \"INSERT INTO diary (`title`, `content`, `member_id`) VALUES (%s, %s, %s)\"\n            cursor.execute(query, (new_diary.get_diary_data(\"title\"), new_diary.get_diary_data(\"content\"), token))\n            diary_id = cursor.lastrowid\n        conn.commit()\n        with conn.cursor() as cursor:\n            query = \"UPDATE diary SET writed_at = %s WHERE member_id = %s AND diary_id = %s\"\n            cursor.execute(query, (datetime.datetime.now(), token, diary_id))\n\n        if new_diary.get_diary_data(\"feeling\") is None:\n            get_diary_feelings()\n            with conn.cursor() as cursor:\n                query = \"UPDATE diary SET feeling = %s WHERE member_id = %s AND diary_id = %s\"\n                cursor.execute(query, (new_diary.get_diary_data(\"feeling\"), token, diary_id))\n            conn.commit()\n    finally:\n        conn.close()\n\n\n    return jsonify({\n        \"status\": 201,\n        \"message\": \"요청이 성공했습니다.\",\n        \"data\": {\n            \"diaryId\": diary_id,\n            \"diaryContent\" : new_diary.get_diary_data(\"content\")\n        }\n    }), 201\n\n\n@app.route('/api/ai/diary/feelings', methods=['POST'])\ndef get_diary_feelings():\n    conn = pymysql.connect(**mysql_params)\n    data = request.json\n    token = request.headers.get('Authorization')\n    dairy_id = data['diaryId']\n\n    try:\n        with conn.cursor() as cursor:\n            query = \"SELECT content FROM diary WHERE member_id = %s AND diary_id = %s\"\n            cursor.execute(query, (token, dairy_id))\n            diary_content = cursor.fetchone()\n\n            diary_content = diary_content['content']\n\n        new_diary = diary(\n            diary_content = None,\n            metadata=None,\n            content=diary_content,\n            title=None,\n            spicy_advice=None,\n            soft_advice=None\n        )\n\n        new_diary.get_diary_feeling()\n        with conn.cursor() as cursor:\n            query = \"UPDATE diary SET feeling = %s WHERE member_id = %s AND diary_id = %s\"\n            cursor.execute(query, (new_diary.get_diary_data(\"feeling\"), token, dairy_id))\n        conn.commit()\n    finally:\n        conn.close()\n\n\n    return jsonify({\n        \"status\": 201,\n        \"message\": \"요청이 성공했습니다.\",\n        \"data\": {\n            \"feeling\": new_diary.get_diary_data(\"feeling\")\n        }\n    }), 201\n\n\n@app.route('/api/ai/advice/content', methods=['POST'])\ndef get_diary_advice():\n    conn = pymysql.connect(**mysql_params)\n    data = request.json\n    token = request.headers.get('Authorization')\n    dairy_id = data['diaryId']\n\n    try:\n        with conn.cursor() as cursor:\n            query = \"SELECT content FROM diary WHERE member_id = %s AND diary_id = %s\"\n            cursor.execute(query, (token, dairy_id))\n        diary_content = cursor.fetchone()\n\n        new_diary = diary(\n            diary_content = None,\n            metadata=None,\n            content=diary_content,\n            title=None,\n            spicy_advice=None,\n            soft_advice=None\n        )\n\n        new_diary.get_diary_advice()\n\n        with conn.cursor() as cursor:\n            query = \"INSERT INTO advice (kind_advice, spicy_advice) VALUES (%s, %s)\"\n            cursor.execute(query, (new_diary.get_diary_data(\"soft_advice\"), new_diary.get_diary_data(\"spicy_advice\")))\n            adviceid = cursor.lastrowid\n            query = \"UPDATE diary SET advice_id = %s WHERE member_id = %s AND diary_id = %s\"\n            cursor.execute(query, (adviceid, token, dairy_id))\n        conn.commit()\n    finally:\n        conn.close()\n\n    return jsonify({\n        \"status\": 201,\n        \"message\": \"요청이 성공했습니다.\",\n        \"data\": {\n            \"adviceId\": adviceid,\n            \"advice\": {\n                \"spicy\": new_diary.get_diary_data(\"spicy_advice\"),\n                \"kind\": new_diary.get_diary_data(\"soft_advice\")\n            }\n        }\n    }), 201\n\n\n@app.route('/api/ai/diary/summary', methods=['GET'])\ndef get_diary_summary():\n    conn = pymysql.connect(**mysql_params)\n    token = request.headers.get('Authorization')\n    date = request.args.get('date')\n\n    try:\n        with conn.cursor() as cursor:\n            ## 주어진 date에 해당하는 년도와 해당 월에 작성된 일기의 감정을 분석\n            query = \"SELECT feeling FROM diary WHERE member_id = %s AND YEAR(writed_at) = %s AND MONTH(writed_at) = %s\"\n            cursor.execute(query, (token, date[:4], date[5:7]))\n            result = cursor.fetchall()\n            feelings = [row['feeling'] for row in result]\n\n        feeling_count = {\n            \"HAPPY\": 0,\n            \"SAD\": 0,\n            \"ANGRY\": 0,\n            \"WORRY\": 0,\n            \"SURPRISED\": 0,\n            \"RELAXED\": 0,\n            \"None\": 0\n        }\n\n        feeling_count = defaultdict(int)\n        for feeling in feelings:\n            feeling_count[feeling] += 1\n\n        max_feeling = max(feeling_count, key=feeling_count.get)\n        #두번째로 많은 감정도 선택\n        feeling_count[max_feeling] = 0\n        second_max_feeling = max(feeling_count, key=feeling_count.get)\n    finally:\n        conn.close()\n\n    return jsonify({\n        \"status\": 200,\n        \"message\": \"요청이 성공했습니다.\",\n        \"data\": {\n            \"firstFeeling\": max_feeling,\n            \"secondFeeling\": second_max_feeling\n        }\n    }), 200\n\n\nif __name__ == '__main__':\n    app.run()
===================================================================
diff --git a/database.py b/database.py
--- a/database.py	
+++ b/database.py	
@@ -4,9 +4,11 @@
 from flask import Flask, request, jsonify
 from diaryclass import diary
 from collections import defaultdict
+from flask_cors import CORS
 
 
 app = Flask(__name__)
+CORS(app, supports_credentials=True, origin=('https://honeyary.vercel.app/', 'http://localhost:5173'))
 
 mysql_params = {
     'host': 'kkoolbee-database.cvimcwwiengv.ap-northeast-2.rds.amazonaws.com',
@@ -19,7 +21,7 @@
 }
 
 
-@app.route('/diary', methods=['GET'])
+@app.route('/api/ai/diary/create', methods=['GET'])
 def get_api_diary_create():
     conn = pymysql.connect(**mysql_params)
     data = request.json
